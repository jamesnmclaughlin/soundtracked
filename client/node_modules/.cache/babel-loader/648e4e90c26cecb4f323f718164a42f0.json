{"ast":null,"code":"import _asyncToGenerator from \"/Users/jamesmclaughlin/Sites/soundtracked/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/jamesmclaughlin/Sites/soundtracked/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jamesmclaughlin/Sites/soundtracked/client/src/components/pages/Test.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport React, { useState, useEffect } from 'react';\nimport { checkServiceConnection, spotifySearch, audioFeatures, getStravaActivities, getStravaActivityInfo } from '../functions/functions';\nexport default function Test() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    response = _useState2[0],\n    setResponse = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    seedList = _useState4[0],\n    setSeedList = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setLoading = _useState6[1];\n  var trackInfo = null;\n  var searchFunction = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(response) {\n      var seedList, trackID, _iterator, _step, _loop;\n      return _regeneratorRuntime().wrap(function _callee$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            seedList = \"\";\n            trackID = null;\n            _iterator = _createForOfIteratorHelper(response);\n            _context2.prev = 3;\n            _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n              var song, now_playing;\n              return _regeneratorRuntime().wrap(function _loop$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    song = _step.value;\n                    now_playing = false; // song.name = track\n                    // song.artist.name = artist\n                    // song.album.#text = album\n                    if (song.hasOwnProperty('@attr')) {\n                      if (song[\"@attr\"].hasOwnProperty('nowplaying')) {\n                        now_playing = song[\"@attr\"].nowplaying;\n                      }\n                    }\n                    if (now_playing) {\n                      _context.next = 6;\n                      break;\n                    }\n                    _context.next = 6;\n                    return spotifySearch(song.artist['#text'], null, null, song.name, function (response) {\n                      if (response.tracks.items.length > 0) {\n                        trackID = response.tracks.items[0].id;\n                      } else {\n                        trackID = null;\n                      }\n                      console.log(song);\n                      console.log(trackID);\n                      if (trackID !== null) {\n                        if (seedList !== \"\") {\n                          seedList += \",\";\n                        }\n                        seedList += trackID;\n                      }\n                    });\n                  case 6:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _loop);\n            });\n            _iterator.s();\n          case 6:\n            if ((_step = _iterator.n()).done) {\n              _context2.next = 10;\n              break;\n            }\n            return _context2.delegateYield(_loop(), \"t0\", 8);\n          case 8:\n            _context2.next = 6;\n            break;\n          case 10:\n            _context2.next = 15;\n            break;\n          case 12:\n            _context2.prev = 12;\n            _context2.t1 = _context2[\"catch\"](3);\n            _iterator.e(_context2.t1);\n          case 15:\n            _context2.prev = 15;\n            _iterator.f();\n            return _context2.finish(15);\n          case 18:\n            setSeedList(seedList);\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee, null, [[3, 12, 15, 18]]);\n    }));\n    return function searchFunction(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var fetchData = function fetchData() {\n    getStravaActivities(function (stravaActivities) {\n      var hasHeartRateCounter = 0;\n      var average_distance = 0;\n      var average_heartrate = 0;\n      var average_elevation_change = 0;\n      var average_speed = 0;\n      stravaActivities.map(function (activity) {\n        // Ignore Activity If Not a Run\n        if (activity.type == \"Run\") {\n          console.log(activity);\n          console.log(\"test\");\n          if (activity.has_heartrate) {\n            hasHeartRateCounter += 1;\n            average_heartrate += activity.average_heartrate;\n          }\n          average_distance += activity.distance;\n          average_elevation_change += Math.abs(activity.elev_high - activity.elev_low);\n          average_speed += activity.average_speed;\n\n          // Convert Activity's Local Start Time to Unix Timestamp (seconds)\n          var start_date = Math.floor(new Date(activity.start_date).getTime() / 1000);\n          var end_date = null;\n\n          // Get extra activity information such as split metrics\n          getStravaActivityInfo(activity.id, function (activity) {\n            var sampling_rate = 100;\n            console.log(activity);\n\n            // grab current value\n            // check if there are 100 values ahead\n            // if no grab end value if not already current\n            // if yes grab value 100 ahead\n            // work difference between values\n            // \n            var _loop2 = function _loop2() {\n              var start_time = activity.time.data[i];\n              var start_distance = activity.distance.data[i];\n              var end_time = null;\n              var end_distance = null;\n              if (activity.distance.original_size > i + 100) {\n                end_time = activity.time.data[i + 100];\n                end_distance = activity.distance.data[i + 100];\n              } else {\n                end_time = activity.time.data[activity.distance.original_size - 1];\n                end_distance = activity.distance.data[activity.distance.original_size - 1];\n              }\n              var time_diff = end_time - start_time;\n              var distance_diff = end_distance - start_distance;\n\n              // Determine Average Pace Metric (s/m)\n              var pace = time_diff / distance_diff;\n\n              // Convert value to understandable pace\n              var pace_text = new Date(parseInt(pace * 1600) * 1000).toISOString().slice(14, 19);\n\n              // Check if metric has a adjusted elevation metric \n\n              // Find Songs Listened to between each split time\n\n              // After finding the songs listened to build an object with the metric pace and song features\n\n              end_date = start_date + time_diff;\n\n              //if (checkServiceConnection(\"lastfm\")) {\n              fetch(\"/get-lastfm-songs?start_date=\" + start_date + \"&end_date=\" + end_date + \"&user=\" + localStorage.getItem(\"lastfm_name\")).then(function (res) {\n                return res.json();\n              }).then( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data) {\n                  return _regeneratorRuntime().wrap(function _callee2$(_context3) {\n                    while (1) switch (_context3.prev = _context3.next) {\n                      case 0:\n                        setResponse(data.response.recenttracks.track);\n                        if (!(data.response.recenttracks.track.length > 0)) {\n                          _context3.next = 5;\n                          break;\n                        }\n                        console.log(pace_text);\n                        //console.log(data.response.recenttracks.track)\n                        _context3.next = 5;\n                        return searchFunction(data.response.recenttracks.track);\n                      case 5:\n                        setLoading(false);\n                      case 6:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }, _callee2);\n                }));\n                return function (_x2) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n              //}\n              //console.log(\"Start Date: \" + start_date)\n              //console.log(\"End Date: \" + end_date)\n\n              start_date = end_date;\n            };\n            for (var i = 0; i < activity.distance.original_size - 1; i += sampling_rate) {\n              _loop2();\n            }\n          });\n        }\n      });\n      average_distance = average_distance / stravaActivities.length;\n      average_elevation_change = average_elevation_change / stravaActivities.length;\n      average_heartrate = average_heartrate / hasHeartRateCounter;\n      average_speed = average_speed / stravaActivities.length;\n      console.log(\"Average Distance: \" + average_distance);\n      console.log(\"Average Elevation Change: \" + average_elevation_change);\n      console.log(\"Average Heart Rate: \" + average_heartrate);\n      console.log(\"Average Speed: \" + average_speed);\n    });\n  };\n  useEffect(function () {\n    fetchData();\n  }, []);\n  if (isLoading) {\n    return \"Loading\";\n  }\n\n  /*audioFeatures(seedList, function(trackInfo) {\n      console.log(trackInfo);\n  }); */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: '#000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, \"Loaded\"));\n}","map":{"version":3,"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","F","s","n","e","_e","f","normalCompletion","didErr","step","_e2","minLen","_arrayLikeToArray","toString","from","test","arr","len","arr2","React","useState","useEffect","checkServiceConnection","spotifySearch","audioFeatures","getStravaActivities","getStravaActivityInfo","Test","_useState","_useState2","_slicedToArray","response","setResponse","_useState3","_useState4","seedList","setSeedList","_useState5","_useState6","isLoading","setLoading","trackInfo","searchFunction","_ref","_asyncToGenerator","_callee","trackID","_iterator","_step","_loop","_callee$","_context2","song","now_playing","_loop$","_context","nowplaying","artist","tracks","items","id","console","log","t1","_x","apply","arguments","fetchData","stravaActivities","hasHeartRateCounter","average_distance","average_heartrate","average_elevation_change","average_speed","map","activity","has_heartrate","distance","Math","abs","elev_high","elev_low","start_date","floor","Date","getTime","end_date","sampling_rate","_loop2","start_time","time","data","start_distance","end_time","end_distance","original_size","time_diff","distance_diff","pace","pace_text","parseInt","toISOString","fetch","localStorage","getItem","res","json","_ref2","_callee2","_callee2$","_context3","recenttracks","track","_x2","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","color"],"sources":["/Users/jamesmclaughlin/Sites/soundtracked/client/src/components/pages/Test.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { checkServiceConnection, spotifySearch, audioFeatures, getStravaActivities, getStravaActivityInfo } from '../functions/functions';\n\nexport default function Test() {\n    \n    const [response, setResponse] = useState([]);\n    const [seedList, setSeedList] = useState(\"\");\n    const [isLoading, setLoading] = useState(true)\n    let trackInfo = null;\n\n    const searchFunction = async (response) => {\n        let seedList = \"\";\n        let trackID = null;\n\n        for (let song of response) {\n\n            let now_playing = false;\n\n            // song.name = track\n            // song.artist.name = artist\n            // song.album.#text = album\n\n            if (song.hasOwnProperty('@attr')) {\n                if (song[\"@attr\"].hasOwnProperty('nowplaying')) {\n                    now_playing = song[\"@attr\"].nowplaying;\n                }\n            }\n\n            if (!now_playing) {\n\n\n                await spotifySearch(song.artist['#text'], null, null, song.name, function(response) {\n                    if (response.tracks.items.length > 0) {\n                        trackID = response.tracks.items[0].id;\n                    } else {\n                        trackID = null;\n                    }\n\n\n                    console.log(song)\n                    console.log(trackID)\n    \n                    if (trackID !== null) {\n\n                        if (seedList !== \"\") {\n                            seedList += \",\";\n                        }\n                        seedList += trackID;\n                    }\n    \n                });\n            }\n        }\n        setSeedList(seedList);\n    }\n\n    const fetchData = () => {\n\n        getStravaActivities(function(stravaActivities) {\n\n            let hasHeartRateCounter = 0;\n            let average_distance = 0;\n            let average_heartrate = 0;\n            let average_elevation_change = 0;\n            let average_speed = 0;\n\n            stravaActivities.map((activity) => {\n\n\n\n                // Ignore Activity If Not a Run\n                if (activity.type == \"Run\") {\n\n                    \n                    console.log(activity)\n                    console.log(\"test\")\n                    \n                    if (activity.has_heartrate) {\n                        hasHeartRateCounter += 1;\n                        average_heartrate += activity.average_heartrate;\n                    }\n\n                    average_distance += activity.distance;\n                    average_elevation_change += Math.abs(activity.elev_high - activity.elev_low);\n                    average_speed += activity.average_speed;\n\n                    // Convert Activity's Local Start Time to Unix Timestamp (seconds)\n                    let start_date = Math.floor(new Date(activity.start_date).getTime() / 1000);\n                    let end_date = null;\n\n                    // Get extra activity information such as split metrics\n                    getStravaActivityInfo(activity.id, function(activity) {\n\n                        let sampling_rate = 100;\n                        console.log(activity)\n\n                        // grab current value\n                        // check if there are 100 values ahead\n                        // if no grab end value if not already current\n                        // if yes grab value 100 ahead\n                        // work difference between values\n                        // \n                                                \n                        for (let i = 0; i < (activity.distance.original_size - 1); i += sampling_rate) {\n\n                            let start_time = activity.time.data[i];\n                            let start_distance = activity.distance.data[i];\n                            let end_time = null;\n                            let end_distance = null;\n\n                            if (activity.distance.original_size > (i + 100) ) {\n                                end_time = activity.time.data[i+100];\n                                end_distance = activity.distance.data[i+100];\n                            } else {\n                                end_time = activity.time.data[activity.distance.original_size-1];\n                                end_distance = activity.distance.data[activity.distance.original_size-1];\n                            }\n\n                            let time_diff = end_time - start_time;\n                            let distance_diff = end_distance - start_distance;\n\n                            // Determine Average Pace Metric (s/m)\n                            let pace = time_diff / distance_diff;\n\n                            // Convert value to understandable pace\n                            let pace_text = new Date(parseInt(pace * 1600) * 1000).toISOString().slice(14, 19)\n\n                            // Check if metric has a adjusted elevation metric \n    \n                            // Find Songs Listened to between each split time\n    \n                            // After finding the songs listened to build an object with the metric pace and song features\n\n    \n                            end_date = start_date + time_diff;\n\n                            \n                            //if (checkServiceConnection(\"lastfm\")) {\n                                fetch(\"/get-lastfm-songs?start_date=\" + start_date + \"&end_date=\" + end_date + \"&user=\" + localStorage.getItem(\"lastfm_name\"))\n                                    .then(res => res.json())\n                                    .then(async (data) => {\n                                        setResponse(data.response.recenttracks.track);\n\n                                        if (data.response.recenttracks.track.length > 0) {\n                                            console.log(pace_text);\n                                            //console.log(data.response.recenttracks.track)\n                                            await searchFunction(data.response.recenttracks.track);\n                                        }\n                    \n                                        setLoading(false);\n                                    });\n                            //}\n                            //console.log(\"Start Date: \" + start_date)\n                            //console.log(\"End Date: \" + end_date)\n    \n                            start_date = end_date;\n                        }\n                        \n                        \n                    });\n\n                }\n\n\n            });\n        \n            average_distance = average_distance / stravaActivities.length;\n            average_elevation_change = average_elevation_change / stravaActivities.length;\n            average_heartrate = average_heartrate / hasHeartRateCounter; \n            average_speed = average_speed / stravaActivities.length;\n\n            console.log(\"Average Distance: \" + average_distance);\n            console.log(\"Average Elevation Change: \" + average_elevation_change);\n            console.log(\"Average Heart Rate: \" + average_heartrate);\n            console.log(\"Average Speed: \" + average_speed);\n            \n        });\n\n\n        \n\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    if (isLoading) {\n        return \"Loading\";\n    }\n\n    /*audioFeatures(seedList, function(trackInfo) {\n        console.log(trackInfo);\n    }); */   \n\n    return (\n        <div>\n            <p style={{color: '#000'}}>Loaded</p>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}