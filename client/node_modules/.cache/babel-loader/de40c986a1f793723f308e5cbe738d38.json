{"ast":null,"code":"import _slicedToArray from \"/Users/jamesmclaughlin/Sites/soundtracked/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jamesmclaughlin/Sites/soundtracked/client/src/components/get-runs.js\";\nimport React, { useEffect } from 'react';\nimport { checkServiceConnection } from './functions/functions';\nvar baseURL = \"https://www.strava.com/api/v3\";\nexport default function GetRuns() {\n  var _React$useState = React.useState({}),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    postdata = _React$useState2[0],\n    setPostData = _React$useState2[1];\n  var apiFunction = \"/athlete/activities\";\n  useEffect(function () {\n    if (checkServiceConnection(\"strava\")) {\n      fetch(baseURL + apiFunction, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"strava_access_token\")\n        }\n      }).then(function (data) {\n        return setPostData(data);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  }, postdata !== null);\n}","map":{"version":3,"names":["React","useEffect","checkServiceConnection","baseURL","GetRuns","_React$useState","useState","_React$useState2","_slicedToArray","postdata","setPostData","apiFunction","fetch","headers","Authorization","localStorage","getItem","then","data","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/jamesmclaughlin/Sites/soundtracked/client/src/components/get-runs.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { checkServiceConnection } from './functions/functions';\n\nconst baseURL = \"https://www.strava.com/api/v3\";\n\nexport default function GetRuns() {\n\n    const [postdata, setPostData] = React.useState({});\n    const apiFunction = \"/athlete/activities\";\n    \n    useEffect(() => {\n        if (checkServiceConnection(\"strava\")) {\n\n            fetch(baseURL + apiFunction, {\n                headers: {\n                    Authorization: \"Bearer \" + localStorage.getItem(\"strava_access_token\")\n                }\n            }).then((data) => setPostData(data));\n        }\n    }, []);\n\n    return <div>{ (postdata !== null) }</div>;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,sBAAsB,QAAQ,uBAAuB;AAE9D,IAAMC,OAAO,GAAG,+BAA+B;AAE/C,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAA,IAAAC,eAAA,GAEEL,KAAK,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA3CI,QAAQ,GAAAF,gBAAA;IAAEG,WAAW,GAAAH,gBAAA;EAC5B,IAAMI,WAAW,GAAG,qBAAqB;EAEzCV,SAAS,CAAC,YAAM;IACZ,IAAIC,sBAAsB,CAAC,QAAQ,CAAC,EAAE;MAElCU,KAAK,CAACT,OAAO,GAAGQ,WAAW,EAAE;QACzBE,OAAO,EAAE;UACLC,aAAa,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,qBAAqB;QACzE;MACJ,CAAC,CAAC,CAACC,IAAI,CAAC,UAACC,IAAI;QAAA,OAAKR,WAAW,CAACQ,IAAI,CAAC;MAAA,EAAC;IACxC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOlB,KAAA,CAAAmB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQhB,QAAQ,KAAK,IAAI,CAAS;AAC7C"},"metadata":{},"sourceType":"module"}