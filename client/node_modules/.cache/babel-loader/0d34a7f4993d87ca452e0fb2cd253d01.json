{"ast":null,"code":"import _slicedToArray from \"/Users/jamesmclaughlin/Sites/soundtracked/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jamesmclaughlin/Sites/soundtracked/client/src/components/get-runs.js\";\nimport React, { useEffect } from 'react';\nimport { checkServiceConnection } from './functions/functions';\nvar baseURL = \"https://www.strava.com/api/v3\";\nexport default function GetRuns() {\n  var _this = this;\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    postdata = _React$useState2[0],\n    setPostData = _React$useState2[1];\n  var _React$useState3 = React.useState(true),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    isLoading = _React$useState4[0],\n    setLoading = _React$useState4[1];\n  var apiFunction = \"/athlete/activities\";\n  var fetchData = function fetchData() {\n    if (checkServiceConnection(\"strava\")) {\n      fetch(baseURL + apiFunction, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"strava_access_token\")\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (response) {\n        setPostData(response);\n        setLoading(false);\n      }).catch(function (err) {\n        return console.log(\"error\");\n      });\n    }\n  };\n  useEffect(function () {\n    fetchData();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: '#000'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, \"Loading...\"));\n  }\n  var activities = postdata.map(function (activity) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: activity.id,\n      className: \"run\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, new Date(activity.start_date).toLocaleString().split(',')[0]), /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, new Date(parseInt(activity.elapsed_time) * 1000).toISOString().slice(11, 19)), /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, parseInt(activity.distance) / 1000, \"km\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, activity.total_elevation_gain, \"ft\"));\n  });\n  return activities;\n}","map":{"version":3,"names":["React","useEffect","checkServiceConnection","baseURL","GetRuns","_this","_React$useState","useState","_React$useState2","_slicedToArray","postdata","setPostData","_React$useState3","_React$useState4","isLoading","setLoading","apiFunction","fetchData","fetch","headers","Authorization","localStorage","getItem","then","res","json","response","catch","err","console","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","color","activities","map","activity","key","id","className","Date","start_date","toLocaleString","split","parseInt","elapsed_time","toISOString","slice","distance","total_elevation_gain"],"sources":["/Users/jamesmclaughlin/Sites/soundtracked/client/src/components/get-runs.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { checkServiceConnection } from './functions/functions';\n\nconst baseURL = \"https://www.strava.com/api/v3\";\n\nexport default function GetRuns() {\n\n    const [postdata, setPostData] = React.useState([]);\n    const [isLoading, setLoading] = React.useState(true); \n    const apiFunction = \"/athlete/activities\";\n\n    const fetchData = () => {\n        if (checkServiceConnection(\"strava\")) {\n\n            fetch(baseURL + apiFunction, {\n                headers: {\n                    Authorization: \"Bearer \" + localStorage.getItem(\"strava_access_token\")\n                }\n            })\n            .then(res => res.json())\n            .then((response) => {\n\n                setPostData(response);\n\n                setLoading(false);\n            })\n            .catch((err) => console.log(\"error\"));\n        }\n    }\n    \n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    if (isLoading) {\n        return <div><p style={{color: '#000'}}>Loading...</p></div>\n    }\n\n    const activities = postdata.map((activity) => \n        <div key={ activity.id } className=\"run\">\n            <span>{ new Date(activity.start_date).toLocaleString().split(',')[0]}</span>\n            <span>{ new Date(parseInt(activity.elapsed_time) * 1000).toISOString().slice(11, 19) }</span>\n            <span>{ parseInt(activity.distance)/1000 }km</span>\n            <span>{ activity.total_elevation_gain }ft</span>\n        </div>\n    );\n\n    return activities;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}