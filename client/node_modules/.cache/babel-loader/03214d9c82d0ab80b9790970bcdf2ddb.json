{"ast":null,"code":"import _asyncToGenerator from \"/Users/jamesmclaughlin/Sites/soundtracked/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/jamesmclaughlin/Sites/soundtracked/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useEffect } from 'react';\n\n//  -- getServiceID() --\n// A function to retrieve the client ID from the backend node.js server.\n//\n// REQUIRES: \n//      service_name: A string parameter identifying the service e.g Strava, Fitbit... \n// \nfunction getServiceID(service_name) {\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    data = _React$useState2[0],\n    setData = _React$useState2[1];\n  var options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      service_name: service_name\n    })\n  };\n  React.useEffect(function () {\n    fetch(\"/get-client\", options).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return setData(data.key);\n    });\n  }, []);\n  return data;\n}\n\n//  -- checkIfReconnectionExists() --\n//\n// REQUIRES: \n//      service_name: A string parameter identifying the service e.g Strava, Fitbit... \n// \nfunction checkIfReconnectionExists(service_name) {\n  var connection = false;\n  if (localStorage.getItem(service_name + '_refresh_token') !== null) {\n    connection = true;\n  }\n  return connection;\n}\n\n//  -- checkServiceConnection() --\n// A function to check the service connection of the specified service\n// if the application has lost connection then result returned is false.\n//\n// REQUIRES: \n//      service_name: A string parameter identifying the service e.g Strava, Fitbit... \n// \nfunction checkServiceConnection(service_name) {\n  var stillConnected = false;\n  if (localStorage.getItem(service_name + '_access_token') !== null) {\n    // LAST.FM does not provide an expiry date and therefore cannot expire\n    // IGNORE EXPIRY DATE\n    if (service_name !== \"lastfm\") {\n      if (localStorage.getItem(service_name + '_expiry_date') !== null) {\n        if (Date.parse(localStorage.getItem(service_name + '_expiry_date')) > Date.now()) {\n          stillConnected = true;\n        }\n      }\n    } else {\n      stillConnected = true;\n    }\n  }\n  if (!stillConnected) {\n    stillConnected = reconnectService(service_name);\n  }\n  return stillConnected;\n}\n\n//  -- reconnectService() --\n// A function to refresh the connection of the specified service if the \n// application has lost connection.\n//\n// REQUIRES: \n//      service_name: A string parameter identifying the service e.g Strava, Fitbit... \n// \nfunction reconnectService(service_name) {\n  if (checkIfReconnectionExists(service_name)) {\n    var options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        code_verify: localStorage.getItem(\"fitbitCV\"),\n        service_name: service_name,\n        refresh_token: localStorage.getItem(service_name + \"_refresh_token\")\n      })\n    };\n    fetch(\"/refresh-session\", options).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data.hasOwnProperty('token')) {\n        localStorage.setItem(service_name + '_access_token', data.token);\n      }\n      if (data.hasOwnProperty('exp_date')) {\n        localStorage.setItem(service_name + '_expiry_date', data.exp_date);\n      }\n      if (data.hasOwnProperty('refresh_token')) {\n        localStorage.setItem(service_name + '_refresh_token', data.refresh_token);\n      }\n      return true;\n    });\n  }\n  return false;\n}\nfunction checkSpotifyConnection() {\n  return _checkSpotifyConnection.apply(this, arguments);\n}\nfunction _checkSpotifyConnection() {\n  _checkSpotifyConnection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var reconnectionRequired;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          reconnectionRequired = true;\n          if (localStorage.getItem('spotify_access_token') !== null && localStorage.getItem('spotify_expiry_date') !== null) {\n            if (Date.parse(localStorage.getItem('spotify_expiry_date')) > Date.now()) {\n              reconnectionRequired = false;\n            }\n          }\n          if (!reconnectionRequired) {\n            _context.next = 5;\n            break;\n          }\n          _context.next = 5;\n          return fetch(\"/get-spotify-session\").then(function (res) {\n            return res.json();\n          }).then(function (data) {\n            if (data.hasOwnProperty('token')) {\n              localStorage.setItem('spotify_access_token', data.token);\n            }\n            if (data.hasOwnProperty('exp_date')) {\n              localStorage.setItem('spotify_expiry_date', data.exp_date);\n            }\n          });\n        case 5:\n          return _context.abrupt(\"return\", localStorage.getItem('spotify_access_token') !== null);\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _checkSpotifyConnection.apply(this, arguments);\n}\nfunction spotifySearch(_x, _x2, _x3, _x4, _x5) {\n  return _spotifySearch.apply(this, arguments);\n}\nfunction _spotifySearch() {\n  _spotifySearch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(artist, year, album, track, callback) {\n    var baseURL, query, type, limit, offset, postdata, options;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          baseURL = \"https://api.spotify.com/v1/search?\";\n          query = \"\";\n          if (track != null) {\n            query += \"track:\" + track.replace(\"'\", \"\") + \" \";\n          }\n          if (artist != null) {\n            query += \"artist:\" + artist.replace(\"'\", \"\") + \" \";\n          }\n          if (year != null) {\n            query += \"year:\" + year + \" \";\n          }\n          if (album != null) {\n            query += \"album:\" + album;\n          }\n          type = 'track';\n          limit = 1;\n          offset = 0;\n          postdata = null;\n          options = {\n            method: 'GET',\n            headers: {\n              'Authorization': 'Bearer ' + localStorage.getItem(\"spotify_access_token\"),\n              'Content-Type': 'application/json'\n            }\n          };\n          if (!checkSpotifyConnection()) {\n            _context2.next = 14;\n            break;\n          }\n          _context2.next = 14;\n          return fetch(baseURL + \"q=\" + query + \"&type=\" + type + \"&limit=\" + limit + \"&offset=\" + offset, options).then(function (res) {\n            return res.json();\n          }).then(function (response) {\n            postdata = response;\n          });\n        case 14:\n          callback(postdata);\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _spotifySearch.apply(this, arguments);\n}\nfunction audioFeatures(_x6, _x7) {\n  return _audioFeatures.apply(this, arguments);\n}\nfunction _audioFeatures() {\n  _audioFeatures = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(tracks, callback) {\n    var baseURL, postdata, options;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          baseURL = \"https://api.spotify.com/v1/audio-features?\";\n          postdata = null;\n          options = {\n            method: \"GET\",\n            headers: {\n              'Authorization': 'Bearer ' + localStorage.getItem(\"spotify_access_token\"),\n              'Content-Type': 'application/json'\n            }\n          };\n          if (!checkSpotifyConnection()) {\n            _context3.next = 6;\n            break;\n          }\n          _context3.next = 6;\n          return fetch(baseURL + \"ids=\" + encodeURIComponent(tracks), options).then(function (res) {\n            return res.json();\n          }).then(function (response) {\n            postdata = response;\n          });\n        case 6:\n          ;\n          callback(postdata);\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _audioFeatures.apply(this, arguments);\n}\nfunction getSeeds() {\n  return _getSeeds.apply(this, arguments);\n}\nfunction _getSeeds() {\n  _getSeeds = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n    var listOfSongs, seedList, trackID, _i, _listOfSongs, song;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          listOfSongs = [{\n            artist: \"Bon Iver\",\n            year: \"2016\",\n            album: \"22, a million\",\n            track: \"8 Circle\"\n          }, {\n            artist: \"Wallows\",\n            year: \"2019\",\n            album: \"Nothing happens\",\n            track: \"Are you bored yet?\"\n          }, {\n            artist: \"Adele\",\n            year: \"2008\",\n            album: \"19\",\n            track: \"Chasing pavements\"\n          }, {\n            artist: \"Sam Fender\",\n            year: \"2021\",\n            album: \"Seventeen going under\",\n            track: \"Seventeen going under\"\n          }, {\n            artist: \"Taylor Swift\",\n            year: \"2020\",\n            album: \"Evermore\",\n            track: \"Champagne Problems\"\n          }];\n          seedList = \"\";\n          trackID = null;\n          _i = 0, _listOfSongs = listOfSongs;\n        case 4:\n          if (!(_i < _listOfSongs.length)) {\n            _context4.next = 11;\n            break;\n          }\n          song = _listOfSongs[_i];\n          _context4.next = 8;\n          return spotifySearch(song.artist, song.year, song.album, song.track, function (response) {\n            trackID = response.tracks.items[0].id;\n            if (trackID !== null) {\n              if (seedList !== \"\") {\n                seedList += \",\";\n              }\n              seedList += trackID;\n            }\n          });\n        case 8:\n          _i++;\n          _context4.next = 4;\n          break;\n        case 11:\n          return _context4.abrupt(\"return\", seedList);\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return _getSeeds.apply(this, arguments);\n}\nfunction getStravaActivities(_x8) {\n  return _getStravaActivities.apply(this, arguments);\n}\nfunction _getStravaActivities() {\n  _getStravaActivities = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(callback) {\n    var baseURL, postdata, options;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          baseURL = \"https://www.strava.com/api/v3/athlete/activities\";\n          postdata = null;\n          options = {\n            method: \"GET\",\n            headers: {\n              'Authorization': 'Bearer ' + localStorage.getItem(\"strava_access_token\"),\n              'Content-Type': 'application/json'\n            }\n          };\n          if (!checkServiceConnection(\"strava\")) {\n            _context5.next = 6;\n            break;\n          }\n          _context5.next = 6;\n          return fetch(baseURL, options).then(function (res) {\n            return res.json();\n          }).then(function (response) {\n            postdata = response;\n          });\n        case 6:\n          callback(postdata);\n        case 7:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return _getStravaActivities.apply(this, arguments);\n}\nfunction getStravaActivityInfo(_x9, _x10) {\n  return _getStravaActivityInfo.apply(this, arguments);\n}\nfunction _getStravaActivityInfo() {\n  _getStravaActivityInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(id, callback) {\n    var baseURL, postdata, query, options;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          baseURL = \"https://www.strava.com/api/v3/athlete/activities\";\n          postdata = null;\n          query = \"\";\n          query += \"keys=time,distance,heartrate,altitude,moving\";\n          query += \"&key_by_type=true\";\n          options = {\n            method: \"GET\",\n            headers: {\n              'Authorization': 'Bearer ' + localStorage.getItem(\"strava_access_token\"),\n              'Content-Type': 'application/json'\n            }\n          };\n          if (!checkServiceConnection(\"strava\")) {\n            _context6.next = 9;\n            break;\n          }\n          _context6.next = 9;\n          return fetch(\"https://www.strava.com/api/v3/activities/\" + id + \"/streams?\" + query, options).then(function (res) {\n            return res.json();\n          }).then(function (response) {\n            postdata = response;\n          });\n        case 9:\n          callback(postdata);\n        case 10:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return _getStravaActivityInfo.apply(this, arguments);\n}\nfunction searchFunction(_x11, _x12) {\n  return _searchFunction.apply(this, arguments);\n}\nfunction _searchFunction() {\n  _searchFunction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(tracks, callback) {\n    var seedList, trackID, trackList, _iterator, _step, song, now_playing;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          seedList = \"\";\n          trackID = null;\n          trackList = [];\n          _iterator = _createForOfIteratorHelper(tracks);\n          _context7.prev = 4;\n          _iterator.s();\n        case 6:\n          if ((_step = _iterator.n()).done) {\n            _context7.next = 15;\n            break;\n          }\n          song = _step.value;\n          now_playing = false; // song.name = track\n          // song.artist.name = artist\n          // song.album.#text = album\n          if (song.hasOwnProperty('@attr')) {\n            if (song[\"@attr\"].hasOwnProperty('nowplaying')) {\n              now_playing = song[\"@attr\"].nowplaying;\n            }\n          }\n          if (now_playing) {\n            _context7.next = 13;\n            break;\n          }\n          _context7.next = 13;\n          return spotifySearch(song.artist['#text'], null, null, song.name, function (response) {\n            if (response.tracks.items.length > 0) {\n              trackID = response.tracks.items[0].id;\n            } else {\n              trackID = null;\n            }\n            if (trackID !== null) {\n              if (seedList !== \"\") {\n                seedList += \",\";\n              }\n              seedList += trackID;\n            }\n          });\n        case 13:\n          _context7.next = 6;\n          break;\n        case 15:\n          _context7.next = 20;\n          break;\n        case 17:\n          _context7.prev = 17;\n          _context7.t0 = _context7[\"catch\"](4);\n          _iterator.e(_context7.t0);\n        case 20:\n          _context7.prev = 20;\n          _iterator.f();\n          return _context7.finish(20);\n        case 23:\n          _context7.next = 25;\n          return audioFeatures(seedList, function (trackInfo) {\n            if (trackInfo.audio_features.length > 0) {\n              var _iterator2 = _createForOfIteratorHelper(trackInfo.audio_features),\n                _step2;\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var feature = _step2.value;\n                  trackList.push({\n                    id: feature.id,\n                    bpm: Math.round(feature.tempo),\n                    loudness: feature.loudness,\n                    energy: feature.energy,\n                    key: feature.key,\n                    speechiness: feature.speechiness,\n                    acousticness: feature.acousticness,\n                    danceability: feature.danceability\n                  });\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            }\n          });\n        case 25:\n          console.log(trackList);\n        case 26:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7, null, [[4, 17, 20, 23]]);\n  }));\n  return _searchFunction.apply(this, arguments);\n}\nexport { checkServiceConnection, getServiceID, reconnectService, checkIfReconnectionExists, checkSpotifyConnection, getStravaActivities, getStravaActivityInfo, audioFeatures, spotifySearch, searchFunction, getSeeds };","map":{"version":3,"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","React","useEffect","getServiceID","service_name","_React$useState","useState","_React$useState2","_slicedToArray","data","setData","options","headers","body","JSON","stringify","fetch","res","json","checkIfReconnectionExists","connection","localStorage","getItem","checkServiceConnection","stillConnected","Date","parse","now","reconnectService","code_verify","refresh_token","setItem","token","exp_date","checkSpotifyConnection","_checkSpotifyConnection","apply","arguments","_asyncToGenerator","_callee","reconnectionRequired","_callee$","_context","spotifySearch","_x","_x2","_x3","_x4","_x5","_spotifySearch","_callee2","artist","year","album","track","callback","baseURL","query","limit","offset","postdata","_callee2$","_context2","replace","response","audioFeatures","_x6","_x7","_audioFeatures","_callee3","tracks","_callee3$","_context3","encodeURIComponent","getSeeds","_getSeeds","_callee4","listOfSongs","seedList","trackID","_i","_listOfSongs","song","_callee4$","_context4","items","id","getStravaActivities","_x8","_getStravaActivities","_callee5","_callee5$","_context5","getStravaActivityInfo","_x9","_x10","_getStravaActivityInfo","_callee6","_callee6$","_context6","searchFunction","_x11","_x12","_searchFunction","_callee7","trackList","_iterator","_step","now_playing","_callee7$","_context7","_createForOfIteratorHelper","s","n","nowplaying","t0","e","f","trackInfo","audio_features","_iterator2","_step2","feature","bpm","Math","round","tempo","loudness","energy","speechiness","acousticness","danceability","console","log"],"sources":["/Users/jamesmclaughlin/Sites/soundtracked/client/src/components/functions/functions.js"],"sourcesContent":["import React, { useEffect } from 'react';\n\n\n//  -- getServiceID() --\n// A function to retrieve the client ID from the backend node.js server.\n//\n// REQUIRES: \n//      service_name: A string parameter identifying the service e.g Strava, Fitbit... \n// \nfunction getServiceID(service_name) {\n    const [data, setData] = React.useState(null);\n\n    const options = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ service_name: service_name })\n    }\n\n    React.useEffect(() => {\n        fetch(\"/get-client\", options)\n          .then((res) => res.json())\n          .then((data) => setData(data.key));\n      }, []);\n\n    return data;\n}\n\n//  -- checkIfReconnectionExists() --\n//\n// REQUIRES: \n//      service_name: A string parameter identifying the service e.g Strava, Fitbit... \n// \nfunction checkIfReconnectionExists(service_name) {\n    let connection = false;\n\n    if (localStorage.getItem(service_name + '_refresh_token') !== null) {\n        connection = true;\n    }\n\n    return connection;\n}\n\n//  -- checkServiceConnection() --\n// A function to check the service connection of the specified service\n// if the application has lost connection then result returned is false.\n//\n// REQUIRES: \n//      service_name: A string parameter identifying the service e.g Strava, Fitbit... \n// \nfunction checkServiceConnection(service_name) {\n\n    let stillConnected = false;\n\n    if (localStorage.getItem(service_name + '_access_token') !== null) {\n\n        // LAST.FM does not provide an expiry date and therefore cannot expire\n        // IGNORE EXPIRY DATE\n        if (service_name !== \"lastfm\") {\n\n            if (localStorage.getItem(service_name + '_expiry_date') !== null) {\n                if (Date.parse(localStorage.getItem(service_name + '_expiry_date')) > Date.now()) {\n                    stillConnected = true;\n                }\n            }\n        }\n        else {\n            stillConnected = true\n        }\n    }\n\n    if (!stillConnected) {\n        stillConnected = reconnectService(service_name);\n    }\n    \n    return stillConnected;\n}\n\n//  -- reconnectService() --\n// A function to refresh the connection of the specified service if the \n// application has lost connection.\n//\n// REQUIRES: \n//      service_name: A string parameter identifying the service e.g Strava, Fitbit... \n// \nfunction reconnectService(service_name) {\n\n    if (checkIfReconnectionExists(service_name)) {\n\n        const options = {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ \n                code_verify: localStorage.getItem(\"fitbitCV\"),\n                service_name: service_name,\n                refresh_token: localStorage.getItem(service_name + \"_refresh_token\")\n            })\n        }\n    \n        fetch(\"/refresh-session\", options)\n            .then((res) => res.json())\n            .then((data) => {\n\n                if (data.hasOwnProperty('token')) {\n                    localStorage.setItem(service_name + '_access_token', data.token);\n                }\n                if (data.hasOwnProperty('exp_date')) {\n                    localStorage.setItem(service_name + '_expiry_date', data.exp_date);\n                }\n                if (data.hasOwnProperty('refresh_token')) {\n                    localStorage.setItem(service_name + '_refresh_token', data.refresh_token);\n                }\n\n                return true;\n            });\n          \n    }\n\n    return false;\n}\n\n\nasync function checkSpotifyConnection() {\n\n    let reconnectionRequired = true;\n\n    if (localStorage.getItem('spotify_access_token') !== null && localStorage.getItem('spotify_expiry_date') !== null) {\n        if (Date.parse(localStorage.getItem('spotify_expiry_date')) > Date.now()) {\n            reconnectionRequired = false;\n        }\n    }\n\n    if (reconnectionRequired) {\n        await fetch(\"/get-spotify-session\")\n            .then((res) => res.json())\n            .then((data) => {\n                if (data.hasOwnProperty('token')) {\n                    localStorage.setItem('spotify_access_token', data.token);\n                }\n                if (data.hasOwnProperty('exp_date')) {\n                    localStorage.setItem('spotify_expiry_date', data.exp_date);\n                }\n            });\n    }\n\n    return (localStorage.getItem('spotify_access_token') !== null);\n}\n\n\nasync function spotifySearch(artist, year, album, track, callback) {\n    const baseURL = \"https://api.spotify.com/v1/search?\";\n    let query = \"\";\n\n    if (track != null) {\n\n        query += \"track:\" + track.replace(\"'\", \"\") + \" \";\n    }\n\n    if (artist != null) {\n        query += \"artist:\" + artist.replace(\"'\", \"\") + \" \";\n    }\n\n    if (year != null) {\n        query += \"year:\" + year + \" \";\n    }\n\n    if (album != null) {\n        query += \"album:\" + album;\n    }\n\n    const type = 'track';\n    const limit = 1;\n    const offset = 0;\n\n    let postdata = null;\n\n    const options = {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem(\"spotify_access_token\"), \n            'Content-Type': 'application/json'\n        }\n    };\n\n    if (checkSpotifyConnection()) {\n        await fetch(baseURL + \"q=\" + (query) + \"&type=\" + type + \"&limit=\" + limit + \"&offset=\" + offset, options)\n        .then(res => res.json())\n        .then((response) => {\n            postdata = response;\n        });\n    }\n\n    callback(postdata);\n}\n\nasync function audioFeatures(tracks, callback) {\n\n    const baseURL = \"https://api.spotify.com/v1/audio-features?\";\n    let postdata = null;\n\n    const options = {\n        method: \"GET\",\n        headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem(\"spotify_access_token\"),\n            'Content-Type': 'application/json'\n        }\n    }\n\n    if (checkSpotifyConnection()) {\n        await fetch(baseURL + \"ids=\" + encodeURIComponent(tracks), options)\n            .then(res => res.json())\n            .then((response) => {\n                postdata = response\n            });\n    };\n\n    callback(postdata);\n}\n\n\nasync function getSeeds() {\n\n    const listOfSongs = [\n        {\n            artist: \"Bon Iver\",\n            year: \"2016\",\n            album: \"22, a million\",\n            track: \"8 Circle\"\n        },\n        {\n            artist: \"Wallows\",\n            year: \"2019\",\n            album: \"Nothing happens\",\n            track: \"Are you bored yet?\"\n        },\n        {\n            artist: \"Adele\",\n            year: \"2008\",\n            album: \"19\",\n            track: \"Chasing pavements\"\n        },\n        {\n            artist: \"Sam Fender\",\n            year: \"2021\",\n            album: \"Seventeen going under\",\n            track: \"Seventeen going under\"\n        },\n        {\n            artist: \"Taylor Swift\",\n            year: \"2020\",\n            album: \"Evermore\",\n            track: \"Champagne Problems\"\n        }\n    ]\n\n    let seedList = \"\";\n    let trackID = null;\n\n    for (let song of listOfSongs) {\n        await spotifySearch(song.artist, song.year, song.album, song.track, function(response) {\n            trackID = response.tracks.items[0].id;\n\n            if (trackID !== null) {\n                if (seedList !== \"\") {\n                    seedList += \",\";\n                }\n                seedList += trackID;\n            }\n\n        });\n\n    }\n\n    return seedList;\n}\n\nasync function getStravaActivities(callback) {\n    const baseURL = \"https://www.strava.com/api/v3/athlete/activities\";\n    let postdata = null;\n\n    const options = {\n        method: \"GET\",\n        headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem(\"strava_access_token\"),\n            'Content-Type': 'application/json'\n        }\n    }\n\n    if (checkServiceConnection(\"strava\")) {\n        await fetch(baseURL, options)\n            .then(res => res.json())\n            .then((response) => {\n                postdata = response;\n            });\n    }\n    \n    callback(postdata)\n}\n\nasync function getStravaActivityInfo(id, callback) {\n    const baseURL = \"https://www.strava.com/api/v3/athlete/activities\";\n    let postdata = null;\n    let query = \"\";\n\n    query += \"keys=time,distance,heartrate,altitude,moving\";\n    query += \"&key_by_type=true\"\n\n    const options = {\n        method: \"GET\",\n        headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem(\"strava_access_token\"),\n            'Content-Type': 'application/json'\n        }\n    }\n\n    if (checkServiceConnection(\"strava\")) {\n        await fetch(\"https://www.strava.com/api/v3/activities/\" + id + \"/streams?\" + query, options)\n        .then(res => res.json())\n        .then((response) => {\n            postdata = response;\n        })\n    }\n\n    callback(postdata);\n}\n\nasync function searchFunction(tracks, callback) {\n    let seedList = \"\";\n    let trackID = null;\n    let trackList = [];\n\n    for (let song of tracks) {\n        let now_playing = false;\n\n        // song.name = track\n            // song.artist.name = artist\n            // song.album.#text = album\n\n            if (song.hasOwnProperty('@attr')) {\n                if (song[\"@attr\"].hasOwnProperty('nowplaying')) {\n                    now_playing = song[\"@attr\"].nowplaying;\n                }\n            }\n\n        if (!now_playing) {\n\n            await spotifySearch(song.artist['#text'], null, null, song.name, function(response) {\n                if (response.tracks.items.length > 0) {\n                    trackID = response.tracks.items[0].id;\n                } else {\n                    trackID = null;\n                }\n\n                if (trackID !== null) {\n                    if (seedList !== \"\") {\n                        seedList += \",\";\n                    }\n                    seedList += trackID;\n                }\n            });\n        }\n    }\n\n    await audioFeatures(seedList, function(trackInfo) {\n        if (trackInfo.audio_features.length > 0) {\n\n            for (let feature of trackInfo.audio_features) {\n                trackList.push({\n                    id: feature.id,\n                    bpm: Math.round(feature.tempo),\n                    loudness: feature.loudness,\n                    energy: feature.energy,\n                    key: feature.key,\n                    speechiness: feature.speechiness,\n                    acousticness: feature.acousticness,\n                    danceability: feature.danceability\n                })\n            }\n        }\n    });\n\n    console.log(trackList)\n}\n\nexport { \n    checkServiceConnection, \n    getServiceID, \n    reconnectService, \n    checkIfReconnectionExists, \n    checkSpotifyConnection,\n    getStravaActivities,\n    getStravaActivityInfo,\n    audioFeatures,\n    spotifySearch,\n    searchFunction,\n    getSeeds\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}