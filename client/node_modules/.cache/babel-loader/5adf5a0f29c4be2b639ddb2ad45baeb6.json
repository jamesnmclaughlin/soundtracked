{"ast":null,"code":"var _jsxFileName = \"/Users/jamesmclaughlin/Sites/soundtracked/client/src/components/handlers/StravaHandle.js\";\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nexport default function StravaHandle() {\n  var baseURL = \"https://www.strava.com/oauth/token\";\n  var urlParameters = new URLSearchParams(window.location.search);\n  var authcode = urlParameters.get(\"code\");\n  var options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      service_name: service_name\n    })\n  };\n  React.useEffect(function () {\n    fetch(\"/get-client\", options).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return setData(data.key);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: '#000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Test\"));\n}","map":{"version":3,"names":["axios","React","useEffect","StravaHandle","baseURL","urlParameters","URLSearchParams","window","location","search","authcode","get","options","method","headers","body","JSON","stringify","service_name","fetch","then","res","json","data","setData","key","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","color"],"sources":["/Users/jamesmclaughlin/Sites/soundtracked/client/src/components/handlers/StravaHandle.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect } from 'react';\n\nexport default function StravaHandle() {\n\n    const baseURL = \"https://www.strava.com/oauth/token\";\n    const urlParameters = new URLSearchParams(window.location.search);\n    const authcode = urlParameters.get(\"code\");\n\n\n    \n    const options = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ service_name: service_name })\n    }\n\n    React.useEffect(() => {\n        fetch(\"/get-client\", options)\n          .then((res) => res.json())\n          .then((data) => setData(data.key));\n      }, []);\n\n    return (\n        <div>\n            <p style={{color: '#000'}}>Test</p>\n        </div>\n    );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAEnC,IAAMC,OAAO,GAAG,oCAAoC;EACpD,IAAMC,aAAa,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;EACjE,IAAMC,QAAQ,GAAGL,aAAa,CAACM,GAAG,CAAC,MAAM,CAAC;EAI1C,IAAMC,OAAO,GAAG;IACZC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,YAAY,EAAEA;IAAa,CAAC;EACvD,CAAC;EAEDjB,KAAK,CAACC,SAAS,CAAC,YAAM;IAClBiB,KAAK,CAAC,aAAa,EAAEP,OAAO,CAAC,CAC1BQ,IAAI,CAAC,UAACC,GAAG;MAAA,OAAKA,GAAG,CAACC,IAAI,EAAE;IAAA,EAAC,CACzBF,IAAI,CAAC,UAACG,IAAI;MAAA,OAAKC,OAAO,CAACD,IAAI,CAACE,GAAG,CAAC;IAAA,EAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAER,oBACIxB,KAAA,CAAAyB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACI/B,KAAA,CAAAyB,aAAA;IAAGO,KAAK,EAAE;MAACC,KAAK,EAAE;IAAM,CAAE;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAAI,CAAI,CACjC;AAEd"},"metadata":{},"sourceType":"module"}